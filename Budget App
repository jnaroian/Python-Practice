from __future__ import annotations
from typing import Union
import math
floatint=Union[float,int]
class Category:
    totalwithdrawls=0
    def __init__(self, name:str):
        self.name=name
        self.ledger=[]
        self.balance=0
        self.withdrawls=0
        self.ledgerbit={}
    def deposit(self,amount:floatint, description:str=''):
        self.ledgerbit={'amount':amount,'description':description}
        self.ledger.append(self.ledgerbit)
        self.balance+=amount
    def withdraw(self,amount:floatint, description:str=''):
        if self.check_funds(amount):
            self.ledgerbit={'amount':(-1*amount),'description':description}
            self.ledger.append(self.ledgerbit)
            self.balance-=amount
            return True
        else:
            return False
    def get_balance(self):
        return self.balance
    def transfer(self,amount:floatint,category:Category):
        if self.check_funds(amount):
            self.ledgerbit={'amount':(-1*amount),'description':'Transfer to '+category.name}
            self.ledger.append(self.ledgerbit)
            self.balance-=amount
            category.ledgerbit={'amount':amount,'description':'Transfer from '+self.name}
            category.ledger.append(category.ledgerbit)
            category.balance+=amount
            return True
        else:
            return False
    def check_funds(self,amount:floatint):
        if self.balance>=amount:
            return True
        else:
            return False
    def __string__(self):
        firstline=self.title()
        middlelines=self.nums()
        totaline=self.total()
        print(firstline+middlelines+totaline)
    def title(self):
        return(self.name.center(30,'*')+'\n')
    def nums(self):
        lgbt=''
        strin=''
        for ledgerbit in self.ledger:
            if int(ledgerbit['amount'])!= ledgerbit['amount']:
                if len(ledgerbit['description'])<=23:
                    strin+=(ledgerbit['description'] + str(ledgerbit['amount']).rjust(30-len(ledgerbit['description']))+'\n')
                else: 
                    lgbt=ledgerbit['description'][:23]
                    strin+=(lgbt + str(float(ledgerbit['amount'])).rjust(7)+'\n')
            else:
                if len(ledgerbit['description'])<=23:
                    strin+=(ledgerbit['description'] + (str(ledgerbit['amount'])+'.00').rjust(30-len(ledgerbit['description']))+'\n')
                else: 
                    lgbt=ledgerbit['description'][:23]
                    strin+=(lgbt + (str(ledgerbit['amount'])+'.00').rjust(7)+'\n')
        return strin
    def total(self):
        return('Total: '+ str(self.balance))

bleep=Category('Entertainment')
testobj=Category('Food')
testobj.deposit(900,'deposit')
testobj.withdraw(45.67, "milk, cereal, eggs, bacon, bread")
testobj.transfer(20, bleep)
testobj.__string__()
